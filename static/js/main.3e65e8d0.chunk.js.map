{"version":3,"sources":["components/todo/form.jsx","components/todo/list.jsx","components/todo/todo.jsx","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","handleInputChange","e","target","name","value","console","log","Form","onSubmit","preventDefault","reset","handleSubmit","className","Group","Label","Control","placeholder","onChange","type","variant","defaultValue","min","max","Button","TodoList","ListGroup","list","map","Item","action","complete","toString","key","_id","onClick","handleComplete","text","ToDo","setList","useEffect","difficulty","assignee","Container","Row","Col","Badge","pill","filter","length","md","Math","random","id","i","listArr","listItem","App","React","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8VAwDeA,MApDf,SAAkBC,GAAQ,IAAD,EAECC,mBAAS,IAFV,mBAEhBC,EAFgB,KAEVC,EAFU,KAIjBC,EAAoB,SAAAC,GACxBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAC7CC,QAAQC,IAAIR,IAUd,OACE,oCACE,kBAACS,EAAA,EAAD,CAAMC,SATW,SAACP,GACpBA,EAAEQ,iBACFR,EAAEC,OAAOQ,QACTd,EAAMe,aAAab,GACnBC,EAAQ,KAKwBa,UAAU,6CACtC,wBAAIA,UAAU,oBAAd,YACA,kBAACL,EAAA,EAAKM,MAAN,KACE,kBAACN,EAAA,EAAKO,MAAN,mBAGA,kBAACP,EAAA,EAAKQ,QAAN,CACEZ,KAAK,OACLa,YAAY,sBACZC,SAAUjB,KAGd,kBAACO,EAAA,EAAKM,MAAN,KAEE,kBAACN,EAAA,EAAKO,MAAN,0BAGA,kBAACP,EAAA,EAAKQ,QAAN,CAAcG,KAAK,QAAQN,UAAU,eAAeO,QAAQ,OAAOC,aAAa,IAAIC,IAAI,IACtFC,IAAI,IAAInB,KAAK,aAAac,SAAUjB,KAExC,kBAACO,EAAA,EAAKM,MAAN,KACE,kBAACN,EAAA,EAAKO,MAAN,oBAIA,kBAACP,EAAA,EAAKQ,QAAN,CAAcG,KAAK,OAAOf,KAAK,WAAWa,YAAY,cAAcC,SAAUjB,KAEhF,kBAACuB,EAAA,EAAD,CAAQL,KAAK,SAASC,QAAQ,aAA9B,e,QC1BOK,MAnBf,SAAkB5B,GAEhB,OACE,kBAAC6B,EAAA,EAAD,cACE7B,EAAM8B,KAAKC,KAAI,SAAA7B,GAAI,OAEjB,kBAAC2B,EAAA,EAAUG,KAAX,CAAgBC,QAAM,EAACV,QAASrB,EAAKgC,SAAW,SAAW,UAAWlB,UAAS,mBAAcd,EAAKgC,SAASC,YACzGC,IAAKlC,EAAKmC,KAEV,0BAAMC,QAAS,kBAAMtC,EAAMuC,eAAerC,EAAKmC,OAC5CnC,EAAKsC,Y,qCCiEHC,MAtEf,SAAczC,GAAQ,IAAD,EAEKC,mBAAS,IAFd,mBAEZ6B,EAFY,KAENY,EAFM,KAkCnB,OAZAC,qBAAU,WASRD,EARc,CACZ,CAAEL,IAAK,EAAGH,UAAU,EAAOM,KAAM,oBAAqBI,WAAY,EAAGC,SAAU,YAC/E,CAAER,IAAK,EAAGH,UAAU,EAAOM,KAAM,iBAAkBI,WAAY,EAAGC,SAAU,YAC5E,CAAER,IAAK,EAAGH,UAAU,EAAOM,KAAM,eAAgBI,WAAY,EAAGC,SAAU,YAC1E,CAAER,IAAK,EAAGH,UAAU,EAAMM,KAAM,cAAeI,WAAY,EAAGC,SAAU,YACxE,CAAER,IAAK,EAAGH,UAAU,EAAOM,KAAM,aAAcI,WAAY,EAAGC,SAAU,gBAIzE,IAGD,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,QAIJ,6BAAShC,UAAU,QACjB,kBAAC8B,EAAA,EAAD,CAAW9B,UAAU,eACnB,kBAAC+B,EAAA,EAAD,CAAK/B,UAAU,iCACb,kBAACgC,EAAA,EAAD,KACE,0CACa,kBAACC,EAAA,EAAD,CAAOC,MAAI,EAAC3B,QAASO,EAAKqB,QAAO,SAAAjD,GAAI,OAAKA,EAAKgC,YAAUkB,OAAS,UAAY,UAA9E,IAA0FtB,EAAKqB,QAAO,SAAAjD,GAAI,OAAKA,EAAKgC,YAAUkB,OAA9H,KADb,wBAKJ,kBAACL,EAAA,EAAD,CAAK/B,UAAU,aACb,kBAACgC,EAAA,EAAD,CAAKK,GAAI,EAAGrC,UAAU,UACpB,kBAAC,EAAD,CAAUD,aAjDN,SAACb,GACfA,EAAKmC,IAAMiB,KAAKC,SAChBrD,EAAKgC,UAAW,EAChBQ,EAAQ,GAAD,mBAAKZ,GAAL,CAAW5B,SAgDV,kBAAC8C,EAAA,EAAD,CAAKK,GAAI,EAAGrC,UAAU,yCACpB,kBAAC,EAAD,CACEc,KAAMA,EACNS,eAhDS,SAAAiB,GAErB,IAAItD,EAAO4B,EAAKqB,QAAO,SAAAM,GAAC,OAAIA,EAAEpB,MAAQmB,KAAI,IAAM,GAEhD,GAAItD,EAAKmC,IAAK,CACZnC,EAAKgC,UAAYhC,EAAKgC,SACtB,IAAIwB,EAAU5B,EAAKC,KAAI,SAAA4B,GAAQ,OAAIA,EAAStB,MAAQnC,EAAKmC,IAAMnC,EAAOyD,KACtEjB,EAAQgB,aCtBOE,E,uKAEjB,OACE,oCACE,kBAAC,EAAD,W,GAJyBC,IAAMC,WCEjCC,G,mLAEF,OAAO,kBAAC,EAAD,U,GAFQF,IAAMC,YAMnBE,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,K","file":"static/js/main.3e65e8d0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './form.scss';\nfunction TodoForm(props) {\n\n  const [item, setItem] = useState({});\n\n  const handleInputChange = e => {\n    setItem({ ...item, [e.target.name]: e.target.value });\n    console.log(item)\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    setItem({});\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} className=\" shadow-lg bg-white rounded p-3 mb-3 mr-0\">\n        <h3 className=\"text-center mb-2\">Add Item</h3>\n        <Form.Group>\n          <Form.Label >\n            To Do Item\n          </Form.Label>\n          <Form.Control\n            name=\"text\"\n            placeholder=\"Add To Do List Item\"\n            onChange={handleInputChange}\n          />\n        </Form.Group>\n        <Form.Group>\n\n          <Form.Label>\n            Difficulty Rating\n          </Form.Label>\n          <Form.Control type=\"range\" className=\"custom-range\" variant='dark' defaultValue=\"1\" min=\"1\"\n            max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Assigned To\n          </Form.Label>\n\n          <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"secondary\" >Add Item</Button >\n\n      </Form >\n    </>\n  );\n}\n\nexport default TodoForm;\n","import React from 'react';\n\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nfunction TodoList(props) {\n\n  return (\n    <ListGroup>      {\n      props.list.map(item => (\n\n        <ListGroup.Item action variant={item.complete ? 'danger' : 'success'} className={`complete-${item.complete.toString()}`}\n          key={item._id}\n        >\n          <span onClick={() => props.handleComplete(item._id)}>\n            {item.text}\n          </span>\n        </ListGroup.Item>\n      ))\n    }\n    </ListGroup >\n  );\n}\n\nexport default TodoList;\n","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form';\nimport TodoList from './list';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Badge from 'react-bootstrap/Badge';\nimport './todo.scss';\n\nfunction ToDo(props) {\n\n  const [list, setList] = useState([]);\n\n  const addItem = (item) => {\n    item._id = Math.random();\n    item.complete = false;\n    setList([...list, item]);\n  };\n\n  const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n      item.complete = !item.complete;\n      let listArr = list.map(listItem => listItem._id === item._id ? item : listItem);\n      setList(listArr);\n    }\n\n  };\n\n  useEffect(() => {\n    let listArr = [\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\n    ];\n\n    setList(listArr);\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n          </Col>\n        </Row>\n      </Container>\n      <section className=\"todo\">\n        <Container className=\"board-color\" >\n          <Row className=' p-3 mb-3 bg-dark text-white '>\n            <Col>\n              <h2>\n                There are  <Badge pill variant={list.filter(item => !item.complete).length ? \"success\" : \"danger\"}> {list.filter(item => !item.complete).length} </Badge> Items To Complete\n                </h2>\n            </Col>\n          </Row>\n          <Row className=\"pl-3 pr-3\">\n            <Col md={4} className=\"p-sm-0\">\n              <TodoForm handleSubmit={addItem} />\n            </Col>\n            <Col md={8} className=\"justify-content-center p-sm-0 pl-md-5\">\n              <TodoList\n                list={list}\n                handleComplete={toggleComplete}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </section>\n\n\n    </>\n  );\n}\n\nexport default ToDo;\n","import React from 'react';\n\nimport ToDo from './components/todo/todo';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/todo/base.scss';\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}