{"version":3,"sources":["hooks/useForm.js","components/todo/form.jsx","components/todo/list.jsx","hooks/useAjax.js","components/todo/todo-connected.jsx","components/todo/todo.jsx","app.js","index.js"],"names":["useForm","callback","useState","values","setValues","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","TodoForm","props","Form","onSubmit","className","Group","Label","Control","placeholder","onChange","type","variant","defaultValue","min","max","Button","TodoList","ListGroup","list","map","item","Item","key","_id","Container","Row","Col","xs","size","onClick","handleComplete","pill","complete","span","offset","handleDelete","text","difficulty","useAjax","url","setList","isLoading","setIsLoading","_create","a","options","method","mode","cache","headers","data","axios","then","response","console","log","catch","error","_update","id","filter","i","updateUrl","listItem","_read","get","results","_delete","deleteUrl","delete","useEffect","ToDo","addItem","toggleComplete","deleteItem","Badge","length","Spinner","animation","role","md","App","React","Component","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.80a406be.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = (callback) => {\n\n    const [values, setValues] = useState({});\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        callback(values);\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n    };\n};\n\nexport default useForm;","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './form.scss';\nimport useForm from '../../hooks/useForm.js';\nfunction TodoForm(props) {\n  const { handleChange, handleSubmit } = useForm(props.handleSubmit);\n  return (\n    <>\n      <Form onSubmit={handleSubmit} className=\" shadow-lg bg-white rounded p-3 mb-3 mr-0\">\n        <h3 className=\"text-center mb-2\">Add Item</h3>\n        <Form.Group>\n          <Form.Label >\n            To Do Item\n          </Form.Label>\n          <Form.Control\n            name=\"text\"\n            placeholder=\"Add To Do List Item\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n\n          <Form.Label>\n            Difficulty Rating\n          </Form.Label>\n          <Form.Control type=\"range\" className=\"custom-range\" variant='dark' defaultValue=\"1\" min=\"1\"\n            max=\"5\" name=\"difficulty\" onChange={handleChange} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>\n            Assigned To\n          </Form.Label>\n\n          <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleChange} />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"secondary\" >Add Item</Button >\n\n      </Form >\n    </>\n  );\n}\n\nexport default TodoForm;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nfunction TodoList(props) {\n  return (\n\n    <ListGroup>\n      {\n        props.list.map(item => (\n          <ListGroup.Item className=\"mb-3\" variant=\"\"\n            key={item._id}\n          >\n            <Container>\n              <Row >\n                <Col xs={1}>\n                  <Button size=\"sm\" onClick={() => props.handleComplete(item._id)} pill variant={item.complete ? \"danger\" : \"success\"}> {item.complete ? <span> Complete</span> : <span>Pending</span>} </Button>\n                </Col>\n\n                <Col xs={{ span: 1, offset: 10 }}>\n                  <Button size=\"sm\" onClick={() => props.handleDelete(item._id)} ><span> X </span></Button>\n                </Col>\n              </Row>\n              <hr />\n              <Row className=\"pb-1 pt-1\">\n                <Col >\n                  <span >\n                    {item.text}\n                  </span>\n                </Col>\n              </Row>\n              <hr />\n              <Row>\n                <Col xs={{ span: 4, offset: 10 }} >\n                  <span >\n                    Difficulty: {item.difficulty}\n                  </span>\n                </Col>\n              </Row>\n\n            </Container>\n\n\n\n          </ListGroup.Item>\n        ))\n      }\n    </ListGroup >\n  );\n}\n\nexport default TodoList;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useAjax = (url) => {\n    const [list, setList] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const _create = async (item) => {\n        const options = {\n            method: 'post',\n            url,\n            mode: 'cors',\n            cache: 'no-cache',\n            headers: { 'Content-Type': 'application/json' },\n            data: item\n        };\n        setIsLoading(!isLoading);\n        await axios(options)\n            .then(response => {\n                setIsLoading(() => isLoading);\n                console.log('respnse>>>>>', response);\n                setList([...list, response.data])\n            })\n            .catch(error => {\n                console.log('POST AXIOS >>>>', error)\n            });\n\n    }\n    const _update = async id => {\n        let item = list.filter(i => i._id === id)[0] || {};\n        if (item._id) {\n            let updateUrl = `${url}/${id}`;\n            item.complete = !item.complete;\n            const options = {\n                method: 'put',\n                url: updateUrl,\n                mode: 'cors',\n                cache: 'no-cache',\n                headers: { 'Content-Type': 'application/json' },\n                data: item,\n            };\n            setIsLoading(!isLoading);\n            console.log('agter read reade ', isLoading)\n            await axios(options)\n                .then(response => {\n                    setIsLoading(() => isLoading);\n\n                    console.log('list after update >>>>>>>', response.data)\n\n                    setList(list.map(listItem => listItem._id === item._id ? response.data : listItem));\n                })\n                .catch(console.error);\n\n        }\n    };\n    const _read = async () => {\n        setIsLoading(!isLoading);\n        await axios.get(url)\n            .then(response => {\n                setIsLoading(() => isLoading);\n                setList(response.data.results)\n            })\n            .catch(console.error);\n\n    };\n    const _delete = async id => {\n        let item = list.filter(i => i._id === id)[0] || {};\n        if (item._id) {\n            let deleteUrl = `${url}/${id}`;\n            setIsLoading(!isLoading);\n            await axios.delete(deleteUrl)\n                .then(response => {\n                    setIsLoading(() => isLoading);\n                    setList(list.filter(listItem => listItem._id !== item._id));\n                })\n                .catch(console.error);\n\n        }\n    };\n\n    useEffect(() => {\n        _read();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return [\n        list,\n        isLoading,\n        _create,\n        _update,\n        _delete,\n        _read,\n    ]\n};\n\nexport default useAjax;","import React from 'react';\nimport TodoForm from './form.jsx';\nimport TodoList from './list.jsx';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Badge from 'react-bootstrap/Badge';\nimport Spinner from 'react-bootstrap/Spinner';\nimport './todo.scss';\nimport useAjax from '../../hooks/useAjax'\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\n\nconst ToDo = () => {\n  const [list, isLoading, addItem, toggleComplete, deleteItem] = useAjax(todoAPI);\n\n\n  return (\n    <>\n\n      <Container>\n        <Row>\n          <Col>\n          </Col>\n        </Row>\n      </Container>\n      <section className=\"todo\">\n        <Container className=\"board-color\" >\n          <Row className=' p-3 mb-3 bg-dark text-white '>\n            <Col xs={10}>\n              <h2>\n                There are  <Badge pill variant={list.filter(item => !item.complete).length ? \"success\" : \"danger\"}> {list.filter(item => !item.complete).length} </Badge> Items To Complete\n              </h2>\n            </Col>\n            {isLoading ? <Col>\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col> : null}\n          </Row>\n          <Row className=\"pl-3 pr-3\">\n            <Col md={4} className=\"p-sm-0\">\n              <TodoForm handleSubmit={addItem} />\n            </Col>\n            <Col md={8} className=\"justify-content-center p-sm-0 pl-md-5\">\n              <TodoList\n                list={list}\n                handleComplete={toggleComplete} handleDelete={deleteItem}\n              />\n            </Col>\n          </Row>\n        </Container>\n\n      </section>\n\n\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport TodoConnected from './todo-connected.jsx';\n\nfunction ToDo(props) {\n  return (\n    <>\n      <TodoConnected />\n    </>\n  );\n}\n\nexport default ToDo;\n","import React from 'react';\n\nimport ToDo from './components/todo/todo';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/todo/base.scss';\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}